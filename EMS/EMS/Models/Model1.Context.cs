//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmpDatabaseEntities1 : DbContext
    {
        public EmpDatabaseEntities1()
            : base("name=EmpDatabaseEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Grade_master> Grade_master { get; set; }
        public virtual DbSet<Admin> Admins { get; set; }
        public virtual DbSet<Holiday> Holidays { get; set; }
    
        public virtual int AddHoliday(string holidayName, Nullable<System.DateTime> holidayDate)
        {
            var holidayNameParameter = holidayName != null ?
                new ObjectParameter("HolidayName", holidayName) :
                new ObjectParameter("HolidayName", typeof(string));
    
            var holidayDateParameter = holidayDate.HasValue ?
                new ObjectParameter("HolidayDate", holidayDate) :
                new ObjectParameter("HolidayDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHoliday", holidayNameParameter, holidayDateParameter);
        }
    
        public virtual int DeleteHoliday(Nullable<int> holidayID)
        {
            var holidayIDParameter = holidayID.HasValue ?
                new ObjectParameter("HolidayID", holidayID) :
                new ObjectParameter("HolidayID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHoliday", holidayIDParameter);
        }
    
        public virtual int UpdateHoliday(Nullable<int> holidayID, string holidayName, Nullable<System.DateTime> holidayDate)
        {
            var holidayIDParameter = holidayID.HasValue ?
                new ObjectParameter("HolidayID", holidayID) :
                new ObjectParameter("HolidayID", typeof(int));
    
            var holidayNameParameter = holidayName != null ?
                new ObjectParameter("HolidayName", holidayName) :
                new ObjectParameter("HolidayName", typeof(string));
    
            var holidayDateParameter = holidayDate.HasValue ?
                new ObjectParameter("HolidayDate", holidayDate) :
                new ObjectParameter("HolidayDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHoliday", holidayIDParameter, holidayNameParameter, holidayDateParameter);
        }
    }
}
