@model EMS.Models.Employee

@{ ViewBag.Title = "Create"; }

<h2>CREATE NEW</h2>

@using (Html.BeginForm())

{

@Html.AntiForgeryToken()

                <div class="container mt-4">

                    <h4 style="color:black">EMPLOYEE DETAILS</h4>

                    <hr />

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_ID, "Employee ID:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_ID, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Employee ID" } })

                            @Html.ValidationMessageFor(model => model.Emp_ID, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_First_Name, "First Name:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_First_Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter First Name" } })

                            @Html.ValidationMessageFor(model => model.Emp_First_Name, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Last_Name, "Last Name:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_Last_Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Last Name" } })

                            @Html.ValidationMessageFor(model => model.Emp_Last_Name, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Date_of_Birth, "Date of Birth:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_Date_of_Birth, new { htmlAttributes = new { @class = "form-control", type = "date" } })

                            @Html.ValidationMessageFor(model => model.Emp_Date_of_Birth, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Date_of_Joining, "Date of Joining:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_Date_of_Joining, new { htmlAttributes = new { @class = "form-control", type = "date" } })

                            @Html.ValidationMessageFor(model => model.Emp_Date_of_Joining, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Dept_ID, "Department:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.DropDownList("Emp_Dept_ID", null, "Select Department", htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Emp_Dept_ID, "", new { @class = "text-danger" })


                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Grade, "Grade:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.DropDownList("Emp_Grade", null, "Select Grade", htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Emp_Grade, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Designation, "Designation:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_Designation, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Designation" } })

                            @Html.ValidationMessageFor(model => model.Emp_Designation, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Salary, "Salary:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_Salary, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Salary" } })

                            @Html.ValidationMessageFor(model => model.Emp_Salary, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Gender, "Gender:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            <div class="form-check form-check-inline">

                                @Html.RadioButtonFor(model => model.Emp_Gender, "Male", new { @class = "form-check-input" })

                                @Html.Label("Male", htmlAttributes: new { @class = "form-check-label" })

                            </div>

                            <div class="form-check form-check-inline">

                                @Html.RadioButtonFor(model => model.Emp_Gender, "Female", new { @class = "form-check-input" })

                                @Html.Label("Female", htmlAttributes: new { @class = "form-check-label" })

                            </div>

                            @Html.ValidationMessageFor(model => model.Emp_Gender, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Marital_Status, "Marital Status:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.DropDownListFor(model => model.Emp_Marital_Status, new List<SelectListItem>

                                                        {

                    new SelectListItem { Text = "Select marital status", Value = "" },

                    new SelectListItem { Text = "Single", Value = "Single" },

                    new SelectListItem { Text = "Married", Value = "Married" },

                    new SelectListItem { Text = "Divorced", Value = "Divorced" }

                }, htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Emp_Marital_Status, "", new { @class = "text-danger" })

                        </div>

                    </div>


                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Home_Address, "Address:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_Home_Address, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Address" } })

                            @Html.ValidationMessageFor(model => model.Emp_Home_Address, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        @Html.LabelFor(model => model.Emp_Contact_Num, "Mobile Number:", htmlAttributes: new { @class = "col-sm-3 col-form-label" })

                        <div class="col-sm-9">

                            @Html.EditorFor(model => model.Emp_Contact_Num, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Mobile Number" } })

                            @Html.ValidationMessageFor(model => model.Emp_Contact_Num, "", new { @class = "text-danger" })

                        </div>

                    </div>

                    <div class="form-group row">

                        <div class="col-sm-9 offset-sm-3">

                            <button type="submit" class="btn btn-primary">Create</button>

                            <a href="@Url.Action("Index")" class="btn btn-secondary">Back to List</a>

                        </div>

                    </div>

                </div>}

<style>
    /* Custom CSS for styling */
    body {
        font-family: 'Roboto', sans-serif;
        background-image: url('https://www.the-corporate.com/public/profile_images/41765-1711004313.jpg');
        background-size: cover;
        background-repeat: no-repeat;
        background-attachment: fixed;
        background-position: center;
        color: #ffffff;
        margin: 0;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .container {
        background-color:#ffffff; /* White background for the container */
       
        padding: 20px;
        border-radius: 8px; /* Rounded corners */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Light shadow */
    }

    .page-title {
        text-align: center;
        color: #007bff; /* Dodger Blue for headings */
        margin-bottom: 30px;
        font-size: 2rem;
        font-weight: 700;
    }

    .details-container {
        max-width: 800px;
        margin: 20px auto;
        padding: 20px;
        background-color: #ffffff; /* White background */
        border: 1px solid #d1e7dd; /* Light gray border */
        border-radius: 8px; /* Rounded corners */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Light shadow */
    }

    .details-header {
        text-align: center;
        margin-bottom: 20px;
    }

        .details-header h2 {
            font-size: 1.5rem;
            color: #007bff; /* Dodger Blue for subheadings */
        }

    .details-list dt {
        font-weight: 500;
        color: #333; /* Darker gray for labels */
    }

    .details-list dd {
        margin-left: 0;
        color: #333; /* Darker gray for values */
        margin-bottom: 10px;
    }

    .details-links {
        text-align: center;
        margin-top: 20px;
    }

        .details-links a {
            margin-right: 10px;
            padding: 8px 20px;
            color: #ffffff; /* White text color */
            background-color: #007bff; /* Dodger Blue for buttons */
            border: 1px solid #007bff; /* Matching border color */
            border-radius: 6px; /* Rounded corners */
            text-decoration: none;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .details-links a:hover {
                background-color: #0056b3; /* Darker blue for hover */
                transform: scale(1.02);
            }

    /* Form Controls */
    .form-control {
        border-radius: 4px;
        border-color: #d1e7dd; /* Light gray border for form controls */
        background-color: #ffffff; /* White background for form controls */
    }

        .form-control:focus {
            border-color: #007bff; /* Dodger Blue focus border */
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25); /* Blue shadow on focus */
        }

    /* Buttons */
    .btn-primary {
        background-color: #007bff; /* Dodger Blue for primary buttons */
        border-color: #007bff;
    }

        .btn-primary:hover {
            background-color: #0056b3; /* Darker blue on hover */
            border-color: #004085;
        }

    .btn-secondary {
        background-color: black; /* Medium gray for secondary buttons */
        border-color: #6c757d;
    }

        .btn-secondary:hover {
            background-color: whitesmoke; /* Darker gray on hover */
            border-color: #545b62;
        }

    /* Text Color */
    .text-danger {
        color: #dc3545; /* Red color for danger text */
    }
    /*gender radio button labels*/
    .form-check-label{
        color: black;
    }
    /* Form Checkboxes */
    .form-check-input {
        margin-top: 0.3rem;
    }

    .form-check-label {
        margin-left: 0.5rem;
    }

    /* Form Labels */
    .col-form-label {
        color: black;
        font-weight: 600;
    }

    /* Form Groups */
    .form-group {
        margin-bottom: 1.5rem;
    }
</style>

